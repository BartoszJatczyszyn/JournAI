from __future__ import annotations
from typing import Protocol, Any, Dict, List

class EnhancedAnalyticsProtocol(Protocol):
    last_fetch_meta: Dict[str, Any]
    def get_comprehensive_insights(self, days: int) -> Dict[str, Any]: ...
    def get_comprehensive_health_data_v2(self, days: int) -> List[Dict[str, Any]]: ...
    def analyze_temporal_patterns(self, data: List[Dict[str, Any]]) -> Dict[str, Any]: ...
    def perform_cluster_analysis(self, data: List[Dict[str, Any]], clusters: int) -> Dict[str, Any]: ...
    def get_recovery_trend(self, days: int) -> List[Dict[str, Any]]: ...
    def get_recovery_trend_range(self, start: str, end: str) -> List[Dict[str, Any]]: ...
    def get_comprehensive_health_data_range(self, start: str, end: str) -> List[Dict[str, Any]]: ...
    def analyze_recovery_patterns(self, data: List[Dict[str, Any]]) -> Dict[str, Any] | List[Dict[str, Any]]: ...

class RecoveryPatternAnalyticsProtocol(Protocol):
    def analyze_recovery_patterns(self, days: int) -> Dict[str, Any]: ...
