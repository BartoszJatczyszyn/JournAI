#!/bin/bash

# stop_all.sh ‚Äî stop the stack started by Docker Compose and clean local frontend/backend processes

echo "üõë Zatrzymywanie Garmin Health Dashboard..."

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

# Preferuj docker compose down
if command -v docker &>/dev/null; then
	echo -e "${YELLOW}üîß Running: docker compose down${NC}"
	docker compose down || echo -e "${YELLOW}‚ö†Ô∏è docker compose down failed or was not running${NC}"
elif command -v docker-compose &>/dev/null; then
	echo -e "${YELLOW}üîß Running: docker-compose down${NC}"
	docker-compose down || echo -e "${YELLOW}‚ö†Ô∏è docker-compose down failed or was not running${NC}"
else
	echo -e "${YELLOW}‚ö†Ô∏è docker / docker-compose not found ‚Äî skipping this part${NC}"
fi

# Dodatkowe czyszczenie lokalnych proces√≥w (je≈õli kto≈õ uruchomi≈Ç frontend lokalnie)
echo -e "${YELLOW}üîç Zatrzymywanie lokalnych proces√≥w React/Python (je≈õli istniejƒÖ)...${NC}"
pkill -f "react-scripts" 2>/dev/null && echo -e "${GREEN}‚úÖ React zatrzymany${NC}" || echo -e "${YELLOW}‚ö†Ô∏è  Brak proces√≥w React do zatrzymania${NC}"
pkill -f "start_enhanced_backend.py" 2>/dev/null || true
pkill -f "python.*backend" 2>/dev/null && echo -e "${GREEN}‚úÖ Backend (lokalny) zatrzymany${NC}" || echo -e "${YELLOW}‚ö†Ô∏è  Brak lokalnych proces√≥w backend do zatrzymania${NC}"

# Zwolnienie typowych port√≥w, je≈õli sƒÖ zajƒôte
for port in 3000 5001 5002; do
	if lsof -ti:$port >/dev/null 2>&1; then
		lsof -ti:$port | xargs kill -9 2>/dev/null && echo -e "${GREEN}‚úÖ Port $port zwolniony${NC}"
	else
		echo -e "${YELLOW}‚ö†Ô∏è  Port $port by≈Ç wolny${NC}"
	fi
done

echo -e "${GREEN}‚úÖ Wszystkie serwery zatrzymane / zasoby posprzƒÖtane${NC}"